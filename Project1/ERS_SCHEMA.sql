DROP TABLE ERS_REIMBURSEMENT;
DROP TABLE ERS_EMPLOYEE;
DROP SEQUENCE SQ_ERS_EMPLOYEE_PK;
DROP SEQUENCE SQ_ERS_REIMBURSEMENT_PK;

CREATE TABLE ERS_EMPLOYEE(
    EMPLOYEE_ID NUMBER(6),
    EMPLOYEE_NAME VARCHAR2(100) NOT NULL,
    EMAIL VARCHAR2(60) NOT NULL UNIQUE,
    PASSWORD VARCHAR(20) NOT NULL,
    MANAGER_ID NUMBER(6)
);

ALTER TABLE ERS_EMPLOYEE
ADD CONSTRAINT PK_ERS_EMPLOYEE
PRIMARY KEY (EMPLOYEE_ID);

ALTER TABLE ERS_EMPLOYEE
ADD CONSTRAINT FK_ERS_EMPLOYEE_MANAGER
FOREIGN KEY (MANAGER_ID)
REFERENCES ERS_EMPLOYEE (EMPLOYEE_ID)
ON DELETE CASCADE;

CREATE SEQUENCE SQ_ERS_EMPLOYEE_PK
START WITH 1;

CREATE OR REPLACE TRIGGER TR_ERS_EMPLOYEE_PK
BEFORE INSERT ON ERS_EMPLOYEE
FOR EACH ROW
BEGIN
    SELECT SQ_ERS_EMPLOYEE_PK.NEXTVAL INTO :NEW.EMPLOYEE_ID FROM DUAL;
END;

/

CREATE TABLE ERS_REIMBURSEMENT(
    REIMBURSEMENT_ID NUMBER(10),
    REIMBURSEMENT_NAME VARCHAR2(60),
    DESCRIPTION VARCHAR2(1000),
    AMOUNT NUMBER(7,2) NOT NULL,
    STATUS NUMBER(1,0) DEFAULT 0,
    EMPLOYEE_ID NUMBER(6) NOT NULL,
    PICTURE BLOB
    );
    
ALTER TABLE ERS_REIMBURSEMENT
ADD CONSTRAINT PK_ERS_REIMBURSEMENT
PRIMARY KEY (REIMBURSEMENT_ID);

ALTER TABLE ERS_REIMBURSEMENT
ADD CONSTRAINT FK_ERS_REIMBURSEMENT_EMPLOYEE
FOREIGN KEY (EMPLOYEE_ID)
REFERENCES ERS_EMPLOYEE
ON DELETE CASCADE;

CREATE SEQUENCE SQ_ERS_REIMBURSEMENT_PK
START WITH 1;

CREATE OR REPLACE TRIGGER TR_ERS_REIMBURSEMENT_PK
BEFORE INSERT ON ERS_REIMBURSEMENT
FOR EACH ROW
BEGIN
    SELECT SQ_ERS_REIMBURSEMENT_PK.NEXTVAL INTO :NEW.REIMBURSEMENT_ID FROM DUAL;
END;
/

INSERT INTO ERS_EMPLOYEE (EMPLOYEE_NAME, EMAIL,PASSWORD) VALUES('Holly','query@java.com','password');
INSERT INTO ERS_EMPLOYEE (EMPLOYEE_NAME, EMAIL,PASSWORD,MANAGER_ID) VALUES('Jeffry','insert@java.com','password',1);
INSERT INTO ERS_REIMBURSEMENT (REIMBURSEMENT_NAME,AMOUNT,EMPLOYEE_ID,DESCRIPTION) VALUES('Goats',2000,1,'I want a lot of goats');
COMMIT;