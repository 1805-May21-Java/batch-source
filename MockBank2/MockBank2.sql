--creating the table bankinfo with userid as primary key
--with username,email,bankpassowrd,2 columns for the saving and checking account
CREATE TABLE BANKINFO(
USERID NUMBER CONSTRAINT PK_BANK PRIMARY KEY, 
USERNAME VARCHAR2(50),
EMAIL VARCHAR2(50),
BANK_PASSWORD VARCHAR2(50),
C_BANK_AMOUNT NUMBER,
S_BANK_AMOUNT NUMBER)

--create the sequence that increments by 1 for userid
CREATE SEQUENCE SQ_BANK_ID 
START WITH 1
INCREMENT BY 1;

--create the trigger that set the next value of the sequence for user id before the input of the next row
CREATE OR REPLACE TRIGGER TR_INSERT_BANK
BEFORE INSERT ON BANKINFO
FOR EACH ROW
BEGIN
    SELECT SQ_BANK_ID.NEXTVAL INTO :NEW.USERID FROM DUAL;
END;

--the 4 procedures for increasing/decreasing checking/saving account
--requires the userid and the value, it will update the bankinfo table accordingly
CREATE OR REPLACE PROCEDURE INCREASE_CHECKING(USER IN NUMBER, VAL IN NUMBER)
IS
BEGIN
    UPDATE BANKINFO
    SET C_BANK_AMOUNT = C_BANK_AMOUNT + VAL
    WHERE USERID = USER;
END;

CREATE OR REPLACE PROCEDURE DECREASE_CHECKING(USER IN NUMBER, VAL IN NUMBER)
IS
BEGIN
    UPDATE BANKINFO
    SET C_BANK_AMOUNT = C_BANK_AMOUNT - VAL
    WHERE USERID = USER;
END;

CREATE OR REPLACE PROCEDURE INCREASE_SAVING(USER IN NUMBER, VAL IN NUMBER)
IS
BEGIN
    UPDATE BANKINFO
    SET S_BANK_AMOUNT = S_BANK_AMOUNT + VAL
    WHERE USERID = USER;
END;

CREATE OR REPLACE PROCEDURE DECREASE_SAVING(USER IN NUMBER, VAL IN NUMBER)
IS
BEGIN
    UPDATE BANKINFO
    SET S_BANK_AMOUNT = S_BANK_AMOUNT - VAL
    WHERE USERID = USER;
END;


CREATE TABLE TEMPTABLE(
USERNAME VARCHAR2(50) CONSTRAINT PK_USER PRIMARY KEY,
PASS VARCHAR2(50))

INSERT INTO TEMPTABLE VALUES ('emp3', 'pass3');

COMMIT