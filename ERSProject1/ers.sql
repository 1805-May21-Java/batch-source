DROP USER ERS CASCADE
--drop the table if it exists
CREATE USER ERS
IDENTIFIED BY PASSWORD
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA 10M ON USERS;
--using a default user creation I found here.
GRANT CONNECT TO ERS;
GRANT RESOURCE TO ERS;
GRANT CREATE SESSION TO ERS;
GRANT CREATE TABLE TO ERS;
GRANT CREATE VIEW TO ERS;
--putting in the DCLs
CONNECT ERS/PASSWORD;
--connect the dummy user
CREATE TABLE ERS_USER( --ERS user in this case can be either employee or manager
    USER_ID NUMBER(*,0) PRIMARY KEY, --primary key
    USERNAME VARCHAR2(40) NOT NULL UNIQUE, --but this is also a non-null and unique value as well.
    PWORD VARCHAR2(40) NOT NULL, --passwords do not need to be unique
    FNAME VARCHAR2(40),
    LNAME VARCHAR2(40),
    EMAIL VARCHAR2(100) UNIQUE, --emails MUST be unique but can be NULL as well.
    UR_ID NUMBER(*,0) NOT NULL --used in conjunction with next table.
);
CREATE TABLE ERS_ROLE( --this table distinguishes ERS users as either employees or managers
    UR_ID NUMBER(*,0) PRIMARY KEY,
    UR_ROLE VARCHAR2(40)
);
CREATE TABLE REIMBURSEMENT(
    REI_ID NUMBER(*,0) PRIMARY KEY,
    AMOUNT NUMBER(22,2) NOT NULL, --float number
    DESCRIPT VARCHAR(255),
    RECEIPT BLOB, --BLOB is a special keyword
    SUBMITTED TIMESTAMP NOT NULL, --date
    RESOLVED TIMESTAMP, --also date and can be null (not resolved yet)
    REQUESTER_ID NUMBER (*,0) NOT NULL, --requester of expense reimbursement
    RESOLVER_ID NUMBER (*,0), --resolve of reimbursement, should be a manager
    REI_TYPE NUMBER (*,0) NOT NULL, --for specific expenses such as medical
    REI_STATUS NUMBER (*,0) NOT NULL --tells us the status, there are two different tables for both of these
);
CREATE TABLE REIMBURSEMENT_TYPE(
    REI_TYPE_ID NUMBER(*,0) PRIMARY KEY,
    R_TYPE VARCHAR2(30) NOT NULL
);
CREATE TABLE REIMBURSEMENT_STATUS(
    REI_STATUS_ID NUMBER(*,0) PRIMARY KEY,
    R_STATUS VARCHAR2(30) NOT NULL
)
--tables now created
--lets now alter them and get our foreign keys.
ALTER TABLE ERS_USER
ADD CONSTRAINT UR_ID_FK FOREIGN KEY (UR_ID)
REFERENCES ERS_ROLE (UR_ID) ON DELETE CASCADE;
ALTER TABLE REIMBURSEMENT
ADD CONSTRAINT UR_REQUESTER_FK FOREIGN KEY (REQUESTER_ID)
REFERENCES ERS_USER (USER_ID) ON DELETE CASCADE;
ALTER TABLE REIMBURSEMENT
ADD CONSTRAINT UR_RESOLVER_FK FOREIGN KEY (RESOLVER_ID)
REFERENCES ERS_USER (USER_ID) ON DELETE CASCADE;
ALTER TABLE REIMBURSEMENT
ADD CONSTRAINT REI_TYPE_FK FOREIGN KEY (REI_TYPE)
REFERENCES REIMBURSEMENT_TYPE (REI_TYPE_ID) ON DELETE CASCADE;
ALTER TABLE REIMBURSEMENT
ADD CONSTRAINT REI_STATUS_FK FOREIGN KEY (REI_STATUS)
REFERENCES REIMBURSEMENT_STATUS (REI_STATUS_ID) ON DELETE CASCADE;
--Create two sequences
CREATE SEQUENCE SQ_USER
START WITH 1 INCREMENT BY 1;
/
CREATE SEQUENCE SQ_REIMBURSEMENT
START WITH 1 INCREMENT BY 1;
/
--Create two triggers
CREATE OR REPLACE TRIGGER TR_INSERT_USER
BEFORE INSERT ON ERS_USER
FOR EACH ROW
BEGIN
    SELECT SQ_USER.NEXTVAL INTO :NEW.USER_ID FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER TR_INSERT_REIMBURSEMENT
BEFORE INSERT ON REIMBURSEMENT
FOR EACH ROW
BEGIN
    SELECT SQ_REIMBURSEMENT.NEXTVAL INTO :NEW.REI_ID FROM DUAL;
END;
/
--the role, status, and type tables need constant info for each and every one of them, so we will insert the values now.
INSERT INTO ERS_ROLE(UR_ID, UR_ROLE) VALUES(1, 'EMPLOYEE');
INSERT INTO ERS_ROLE(UR_ID, UR_ROLE) VALUES(2, 'MANAGER'); --need only employee and manager to discern the two.
INSERT INTO REIMBURSEMENT_STATUS(REI_STATUS_ID,R_STATUS) VALUES(1, 'PENDING');
INSERT INTO REIMBURSEMENT_STATUS(REI_STATUS_ID,R_STATUS) VALUES(2, 'REJECTED');
INSERT INTO REIMBURSEMENT_STATUS(REI_STATUS_ID,R_STATUS) VALUES(3, 'APPROVED');
INSERT INTO REIMBURSEMENT_TYPE(REI_TYPE_ID,R_TYPE) VALUES(1, 'MEDICAL');
INSERT INTO REIMBURSEMENT_TYPE(REI_TYPE_ID,R_TYPE) VALUES(2, 'SUPPLIES');
INSERT INTO REIMBURSEMENT_TYPE(REI_TYPE_ID,R_TYPE) VALUES(3, 'VACATION');
INSERT INTO REIMBURSEMENT_TYPE(REI_TYPE_ID,R_TYPE) VALUES(4, 'TRAINING');
INSERT INTO REIMBURSEMENT_TYPE(REI_TYPE_ID,R_TYPE) VALUES(5, 'RELOCATION');