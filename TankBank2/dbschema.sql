--table for clients
CREATE TABLE BANK_CLIENT(
    USERNAME VARCHAR2(60),
    PASS VARCHAR2(60),
    EMAIL varchar2(60)
)

ALTER TABLE BANK_CLIENT 
ADD CONSTRAINT PK_CLIENT 
PRIMARY KEY (USERNAME);

--table for all accounts
CREATE TABLE BANK_BANK_ACCOUNT(
    BANK_ID NUMBER(10),
    BANK_NAME VARCHAR(60),
    BALANCE NUMBER(10,2)
    )
    

ALTER TABLE BANK_BANK_ACCOUNT
ADD CONSTRAINT PK_BANK_ACCOUNT
PRIMARY KEY (BANK_ID);

--table to connect accounts to clients
CREATE TABLE BANK_CLIENT_ACCOUNT(
    BANK_ID NUMBER (10),
    USERNAME VARCHAR2 (60)
    );
    
ALTER TABLE BANK_CLIENT_ACCOUNT
ADD CONSTRAINT PK_CLIENT_ACCOUNT
PRIMARY KEY (BANK_ID,USERNAME);


--connects table to client table
ALTER TABLE BANK_CLIENT_ACCOUNT
ADD CONSTRAINT FK_CLIENT_ACCOUNT_CLIENT
FOREIGN KEY (USERNAME) 
REFERENCES BANK_CLIENT
ON DELETE CASCADE;

--connects table to bank account table
ALTER TABLE BANK_CLIENT_ACCOUNT
ADD CONSTRAINT FK_CLIENT_ACCOUNT_ACOUNT
FOREIGN KEY (BANK_ID) 
REFERENCES BANK_BANK_ACCOUNT 
ON DELETE CASCADE;

--create a primary key squence
CREATE SEQUENCE SQ_BANK_ACCOUNT_PK
START WITH 1;


--triggers autoincrement on Bank_Bank_Account
CREATE OR REPLACE TRIGGER BANK_AUTOINCREMENT
BEFORE INSERT ON BANK_BANK_ACCOUNT
FOR EACH ROW
BEGIN
    SELECT SQ_BANK_ACCOUNT_PK.NEXTVAL INTO  :NEW.BANK_ID FROM DUAL; 
END;

    
CREATE TABLE BANK_LOG (
    LOG_NUMBER NUMBER(10),
    BANK_ID NUMBER (10),
    USERNAME VARCHAR2 (60),
    LOG_MESSAGE VARCHAR (120),
    LOG_DATE DATE
);

ALTER TABLE BANK_LOG 
ADD CONSTRAINT PK_LOG
PRIMARY KEY (LOG_NUMBER);

ALTER TABLE BANK_LOG 
ADD CONSTRAINT FK_LOG_ACCOUNT
FOREIGN KEY (BANK_ID)
REFERENCES BANK_BANK_ACCOUNT;

ALTER TABLE BANK_LOG
ADD CONSTRAINT FK_LOG_CLIENT
FOREIGN KEY (USERNAME)
REFERENCES BANK_CLIENT;

CREATE SEQUENCE SQ_LOG_PRIMARY_KEY
START WITH 1;

CREATE OR REPLACE TRIGGER LOG_AUTOINCREMENT
BEFORE INSERT ON BANK_LOG
FOR EACH ROW
BEGIN
    SELECT SQ_LOG_PRIMARY_KEY.NEXTVAL INTO :NEW.LOG_NUMBER FROM DUAL;
END;

--when I need to reset the data, these statements do it
delete from Bank_log;
delete from Bank_Client_account;
delete from bank_bank_account;
delete from bank_client;
commit;

SELECT B.BANK_ID "ACCOUNT ID", BC.USERNAME, B.BALANCE, B.BANK_NAME "ACCOUNT NAME"
FROM BANK_BANK_ACCOUNT B 
JOIN BANK_CLIENT_ACCOUNT BC
ON B.BANK_ID=BC.BANK_ID;